#BlueJ class context
comment0.params=x\ y\ width\ height\ bounds\ temper\ health\ damage\ speed\ handler\ extraExp
comment0.target=Creature(float,\ float,\ int,\ int,\ java.awt.Rectangle,\ state.Temper,\ float,\ float,\ float,\ game.Handler,\ int)
comment0.text=\n\ Creature\ Constructor\ -\ Initializes\ the\ creature\ variables\ plus\ the\ Entity\ variables\n\ \n\ velocity\ starts\ at\ 0\ and\ will\ go\ as\ fast\ as\ speed\n
comment1.params=
comment1.target=float\ getDamage()
comment10.params=newX
comment10.target=void\ fixPositionX(int)
comment11.params=newY
comment11.target=void\ fixPositionY(int)
comment12.params=tx
comment12.target=boolean\ canMoveRight(int)
comment13.params=tx
comment13.target=boolean\ canMoveLeft(int)
comment14.params=ty
comment14.target=boolean\ canMoveUp(int)
comment15.params=ty
comment15.target=boolean\ canMoveDown(int)
comment16.params=
comment16.target=void\ moveY()
comment16.text=\n\ MoveY\ -\ move\ the\ player\ on\ the\ y\ axis\n\ tests\ the\ direction\ you\ are\ moving\ into\ and\ checks\ if\ you\ are\ able\ to\ move\n\ \n\ 1.\ tests\ if\ you\ canMove()\n\ \ \ \ \ \ >\ if\ canMove()\ check\ if\ you\ are\ not\ on\ the\ ground\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ >if\ not\ onGround()\ then\ add\ negative\ gravity\ to\ the\ velocity\n\ \ \ \ \ \ >\ move\ the\ creature\ by\ adding\ velY\ to\ y,\ otherwise\ move\ into\ the\ tile\ you\ will\ be\ runnng\ into\n
comment17.params=
comment17.target=void\ action()
comment18.params=x\ y
comment18.target=boolean\ collisionWithTile(int,\ int)
comment19.params=
comment19.target=void\ collision()
comment19.text=\n\ collision\ -\ checks\ if\ player\ collided\ with\ specific\ Entities\n\ -\ checks\ if\ player\ collided\ with\ another\ damaging\ creature\ (I.E.\ Slime)\n\ -\ checks\ if\ player\ collided\ with\ a\ damaging\ item\ (I.E.\ Arrow)\n
comment2.params=damage
comment2.target=boolean\ hurt(float)
comment2.text=\n\ \ \ \ public\ void\ damage()\n\ \ \ \ {\n\ \ \ \ hurt(damage);\n\ \ \ \ }\n
comment20.params=e
comment20.target=boolean\ collidedRight(java.awt.Rectangle)
comment21.params=e
comment21.target=boolean\ collidedLeft(java.awt.Rectangle)
comment22.params=e
comment22.target=boolean\ collidedUp(java.awt.Rectangle)
comment23.params=e
comment23.target=boolean\ collidedDown(java.awt.Rectangle)
comment24.params=e
comment24.target=void\ collisionRight(java.awt.Rectangle)
comment25.params=e
comment25.target=void\ collisionLeft(java.awt.Rectangle)
comment26.params=e
comment26.target=void\ collisionUp(java.awt.Rectangle)
comment27.params=e
comment27.target=void\ collisionDown(java.awt.Rectangle)
comment28.params=
comment28.target=boolean\ onGround()
comment28.text=\n\ tests\ whether\ the\ creature\ is\ jumping\ or\ falling\n\ 1.\ tests\ if\ the\ creature\ is\ not\ isJumping()\ and\ is\ not\ isFalling()\n\ \ \ \ \ \ >\ if\ the\ creature\ isnt\ jumping\ or\ falling\ then\ the\ creature\ is\ on\ the\ ground\n
comment29.params=
comment29.target=float\ getVelX()
comment3.params=
comment3.target=void\ die()
comment30.params=
comment30.target=float\ getVelY()
comment31.params=
comment31.target=float\ getHealth()
comment32.params=
comment32.target=state.Temper\ getTemper()
comment33.params=
comment33.target=boolean\ isJumping()
comment33.text=\n\ if\ velY\ is\ greater\ than\ 0\n
comment34.params=
comment34.target=boolean\ isFalling()
comment34.text=\n\ if\ velY\ is\ less\ than\ 0\n
comment35.params=velX
comment35.target=void\ setVelX(float)
comment36.params=velY
comment36.target=void\ setVelY(float)
comment37.params=health
comment37.target=void\ setHealth(int)
comment38.params=temper
comment38.target=void\ setTemper(state.Temper)
comment39.params=jumping
comment39.target=void\ setJumping(boolean)
comment4.params=vX\ vY
comment4.target=void\ moveTowards(float,\ float)
comment4.text=\n\ Moves\ towards\ an\ Entity\n
comment40.params=falling
comment40.target=void\ setFalling(boolean)
comment5.params=
comment5.target=void\ moveIgnoreWalls()
comment6.params=
comment6.target=void\ moveIgnoreEntityCollision()
comment7.params=vX\ vY
comment7.target=void\ ignoreBoth(float,\ float)
comment8.params=
comment8.target=void\ move()
comment8.text=\n\ Move\ -\ moves\ the\ player\n\ Methods\ used\:\n\ moveX();\n\ moveY();\n\ collision();\n
comment9.params=
comment9.target=void\ moveX()
comment9.text=\n\ MoveX\ -\ move\ the\ player\ on\ the\ x\ axis\n\ tests\ the\ direction\ you\ are\ moving\ into\ and\ checks\ if\ you\ are\ able\ to\ move\n\ Methods\ used\:\n\ canMove();\n\ \n\ 1.\ tests\ if\ you\ canMove()\n\ \ \ \ \ \ >\ if\ canMove()\ check\ if\ you\ are\ on\ the\ ground\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ >if\ onGround()\ then\ add\ negative\ friction\ to\ the\ velocity\n\ \ \ \ \ \ >\ move\ the\ creature\ by\ adding\ velX\ to\ x,\ otherwise\ move\ into\ the\ tile\ you\ will\ be\ runnng\ into\n
numComments=41
